#!/usr/bin/env python3

import base64
import requests

import poracle

class thisInterface(poracle.Interface):
    def oracle(self, ciphertext):
        ctx = base64.urlsafe_b64encode(ciphertext).decode()
        url = "http://127.0.0.1:8080/search?data={0}".format(ctx)
        r = requests.get(url)
        return "no results found" in r.text

    def intercept(self):
        leak = "/search?data=ODE3MzY0ODI5MTgyNjQwMZf5bBNoKx0M2X3LN1di9W9YwrrC935vOcf0Tb2E7YilFQA8UsJdzphd0Yb0h3DRTP5TBXYPpYArrD3qbad2iPU="
        return base64.urlsafe_b64decode(leak[len("/search?data="):])

def main():
    print("[+] starting oracle attack")
    interface = thisInterface()
    plaintext = poracle.OracleAttack(16, interface, verbose=True).decrypt(interface.intercept(), remove_pad=True)
    print("[+] decrypted message:", plaintext.decode())

if __name__ == "__main__":
    main()
